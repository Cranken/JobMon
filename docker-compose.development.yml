services:

  jobmon_frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
      args:
        # Image based on node:16-alpine
        NODE_RELEASE: "16"
        DEBIAN_RELEASE: bullseye
        # Public URL to access the the backend from the clients webbrowser
        # e.g. https://my-monitor-db.example.org
        NEXT_PUBLIC_BACKEND_URL: ${BACKEND_URL}
        # Public websocket URL to access the backend from the clients webbrowser
        # e.g. wss://my-monitor-db.example.org
        NEXT_PUBLIC_BACKEND_WS: ${BACKEND_WS}
    container_name: jobmon_frontend_dev_env
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${BACKEND_URL}
      NEXT_PUBLIC_BACKEND_WS: ${BACKEND_WS}
    healthcheck:
      test: "curl --fail http://jobmon_frontend:3000"
      # time between the health checks
      interval: 10s
      # time that the health check waits for a response
      timeout: 5s
      # number of consecutive health check failures required to declare the container status as unhealthy
      retries: 5
    volumes:
      # Frontend source code
      - type: bind
        source: ./frontend
        target: /app
      # Cache for node modules
      - type: volume
        source: jobmon_frontend_nodes_modules
        target: /app/node_modules
      # Cache for next.js folder
      - type: volume
        source: jobmon_frontend_nextjs
        target: /app/.next
    depends_on:
      - jobmon_backend

  jobmon_backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.development
      args:
        # Image based on golang:1.20-bullseye
        GOLANG_RELEASE: "1.20"
        DEBIAN_RELEASE: bullseye
    container_name: jobmon_backend_dev_env
    environment:
      # command line options for config file, log leven and listen address
      CONFIG: /app/config.json
      LOGLEVEL: "3"
      LISTEN_ADDR: :8080
    volumes:
      # Backend source code
      - type: bind
        source: ./backend
        target: /app
      # Cache for go builds
      - type: volume
        source: jobmon_backend_cache_go_build
        target: /root/.cache/go-build
      # Cache for go packages
      - type: volume
        source: jobmon_backend_cache_go_packages
        target: /go

  # DockerHub Page: https://hub.docker.com/_/nginx
  # GitHub Repository: https://github.com/nginxinc/docker-nginx
  # Dockerfile for tag latest:
  #   https://github.com/nginxinc/docker-nginx/blob/master/mainline/debian/Dockerfile
  jobmon_nginx:
    restart: always
    env_file: .env
    image: nginx
    container_name: jobmon_nginx
    secrets:
      - source: nginxFullchain
        target: /etc/nginx/certs.d/fullchain.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
      - source: nginxPrivkey
        target: /etc/nginx/certs.d/privkey.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
      - source: nginxChain
        target: /etc/nginx/certs.d/chain.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
    configs:
      - source: nginxDefaultConfig
        target: /etc/nginx/conf.d/default.conf
        uid: "nginx"
        gid: "nginx"
    ports:
      - ${NGINX_HTTP_PORT}:80
      - ${NGINX_HTTPS_PORT}:443
    depends_on:
      jobmon_frontend:
        condition: service_healthy
      jobmon_backend:
        condition: service_started

volumes:
  jobmon_backend_cache_go_build:
  jobmon_backend_cache_go_packages:
  jobmon_frontend_nextjs:
  jobmon_frontend_nodes_modules:

configs:
  nginxDefaultConfig:
    file: ./nginx/configs/default.conf

secrets:
  nginxFullchain:
    file: ./nginx/secrets/fullchain.pem
  nginxPrivkey:
    file: ./nginx/secrets/privkey.pem
  nginxChain:
    file: ./nginx/secrets/chain.pem
