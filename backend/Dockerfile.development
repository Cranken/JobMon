###
# Create golang build image
# * [DockerHub Page](https://hub.docker.com/_/golang)
# * [GitHub Repository](https://github.com/docker-library/golang/)
# * [Release History](https://go.dev/doc/devel/release)
###
ARG GOLANG_RELEASE=1.20 \
    DEBIAN_RELEASE=bullseye \
    GOLANG_TAG=${GOLANG_RELEASE}-${DEBIAN_RELEASE} \
    DEBIAN_TAG=${DEBIAN_RELEASE}

FROM golang:${GOLANG_TAG}

WORKDIR /app

# Install [The advanced Go linter](https://github.com/dominikh/go-tools)
RUN go install honnef.co/go/tools/cmd/staticcheck@latest

# Install CA certificates to verify certificate of OpenID providers
RUN apt-get update \
    && apt-get install -y ca-certificates curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Default environment settigs
ENV DO_PKG_UPDATE=false \
    DO_VET=true \
    DO_STATICCHECK=true \
    DO_TESTS=false \
    CONFIG="/app/config.json" \
    LOGLEVEL=3 \
    LISTEN_ADDR=":8080"

CMD [ \
"/bin/bash", "-c", \
"if [[ ${DO_PKG_UPDATE} == true ]]; then \
     go get -u && \
     go mod tidy; \
 else \
     go mod download; \
 fi && \
 go mod verify && \
 if [[ ${DO_VET} == true ]]; then \
    go vet ./... ; \
 fi && \
 if [[ ${DO_STATICCHECK} == true ]]; then \
    /go/bin/staticcheck ./... ; \
 fi && \
 if [[ ${DO_TESTS} == true ]]; then \
   go test -v ./... ; \
 fi && \
 exec go run . \
     --config=\"${CONFIG}\" \
     --log=\"${LOGLEVEL}\" \
     --listen-addr=\"${LISTEN_ADDR}\"" \
]
