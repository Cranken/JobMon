services:
  frontend:
    restart: always
    build:
      context: ./frontend
      args:
        - NEXT_PUBLIC_BACKEND_URL=${HOSTNAME}:${BACKEND_PORT}
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${HOSTNAME}:${BACKEND_PORT}
    depends_on:
      - backend
      - influxdb
      - psql
    ports:
      - ${FRONTEND_PORT}:3000
  backend:
    restart: always
    build: ./backend
    volumes:
      - type: bind
        source: ./backend/config.json
        target: /app/config.json
      - ./backend/store:/app/store
    depends_on:
      - influxdb
      - psql
    ports:
      - ${BACKEND_PORT}:8080
  influxdb:
    restart: always
    image: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN}
    ports:
      - ${INFLUXDB_PORT}:8086
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
  psql:
    restart: always
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DB}
    ports:
      - ${PSQL_PORT}:5432
