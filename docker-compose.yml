services:

  jobmon_frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Image based on node:16-alpine
        NODE_RELEASE: "16"
        DEBIAN_RELEASE: bullseye
        # Public URL to access the the backend from the clients webbrowser
        # e.g. https://my-monitor-db.example.org
        NEXT_PUBLIC_BACKEND_URL: ${BACKEND_URL}
        # Public websocket URL to access the backend from the clients webbrowser
        # e.g. wss://my-monitor-db.example.org
        NEXT_PUBLIC_BACKEND_WS: ${BACKEND_WS}
    container_name: jobmon_frontend
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${BACKEND_URL}
      NEXT_PUBLIC_BACKEND_WS: ${BACKEND_WS}
    depends_on:
      - jobmon_backend

  jobmon_backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        # Image based on golang:1.20-bullseye
        GOLANG_RELEASE: "1.20"
        DEBIAN_RELEASE: bullseye
    container_name: jobmon_backend
    environment:
      # command line options for config file, log leven and listen address
      CONFIG: /app/config.json
      LOGLEVEL: "3"
      LISTEN_ADDR: :8080
    volumes:
      # Configuration config.json needs to be writable to allow backend to add new metrics
      - type: bind
        source: ./backend/config.json
        target: /app/config.json
    depends_on:
      jobmon_influxdb:
        condition: service_healthy
      jobmon_postgres:
        condition: service_healthy

  # DockerHub Page: https://hub.docker.com/_/influxdb
  # GitHub Repository: https://github.com/influxdata/influxdata-docker/
  jobmon_influxdb:
    restart: always
    image: influxdb
    container_name: jobmon_influxdb
    environment:
      # init mode setup is used to automatically bootstrap the system
      DOCKER_INFLUXDB_INIT_MODE: setup
      # The username to set for the system's initial super-user (Required)
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
      # The password to set for the system's inital super-user (Required)
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      # The name to set for the system's initial organization (Required)
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      # The name to set for the system's initial bucket (Required).
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      #  The authentication token to associate with the system's initial super-user.
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN}
    ports:
      - ${INFLUXDB_PORT}:8086
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      # You can use `influxd print-config` to get a default config file for
      # /etc/influxdb2/config.yml
      - ./influxdb/config:/etc/influxdb2
    healthcheck:
      test: "curl --fail http://jobmon_influxdb:8086/ping"
      # time between the health checks
      interval: 10s
      # time that the health check waits for a response
      timeout: 5s
      # number of consecutive health check failures required to declare the container status as unhealthy
      retries: 5

  # DockerHub Page: https://hub.docker.com/_/postgres
  # GitHub Repository: https://github.com/docker-library/postgres
  jobmon_postgres:
    restart: always
    image: postgres
    container_name: jobmon_postgres
    environment:
      # Inital superuser password for PostgreSQL (required)
      # default username for superuser: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Default database that is created when the image is first started
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - type: bind
        source: ./postgres/data
        target: /var/lib/postgresql/data
    healthcheck:
      # See: https://www.postgresql.org/docs/current/app-pg-isready.html
      test: "pg_isready --host jobmon_postgres --port=5432"
      # time between the health checks
      interval: 10s
      # time that the health check waits for a response
      timeout: 5s
      # number of consecutive health check failures required to declare the container status as unhealthy
      retries: 5

  # DockerHub Page: https://hub.docker.com/_/nginx
  # GitHub Repository: https://github.com/nginxinc/docker-nginx
  # Dockerfile for tag latest:
  #   https://github.com/nginxinc/docker-nginx/blob/master/mainline/debian/Dockerfile
  jobmon_nginx:
    restart: always
    env_file: .env
    image: nginx
    container_name: jobmon_nginx
    secrets:
      - source: nginxFullchain
        target: /etc/nginx/certs.d/fullchain.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
      - source: nginxPrivkey
        target: /etc/nginx/certs.d/privkey.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
      - source: nginxChain
        target: /etc/nginx/certs.d/chain.pem
        uid: "nginx"
        gid: "nginx"
        mode: 400
    configs:
      - source: nginxDefaultConfig
        target: /etc/nginx/conf.d/default.conf
        uid: "nginx"
        gid: "nginx"
    ports:
      - ${NGINX_HTTP_PORT}:80
      - ${NGINX_HTTPS_PORT}:443
    depends_on:
      - jobmon_frontend
      - jobmon_backend

configs:
  nginxDefaultConfig:
    file: ./nginx/configs/default.conf

secrets:
  nginxFullchain:
    file: ./nginx/secrets/fullchain.pem
  nginxPrivkey:
    file: ./nginx/secrets/privkey.pem
  nginxChain:
    file: ./nginx/secrets/chain.pem
