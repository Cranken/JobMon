# Requirements to execute this CI Pipeline
# * Register gitlab-runner with shell executor
# * Install docker with docker compose plugin on gitlab-runner's host
# * Grant permissions to gitlab-runner to execute docker

stages:
  - build
  - test

before_script:
  - docker version

###############################################################################
#### Build stage ##############################################################
###############################################################################

build-backend:
  stage: build
  script:
    - docker compose build jobmon_backend --pull

build-frontend:
  stage: build
  script:
    - docker compose build jobmon_frontend --pull

###############################################################################
#### Test stage ###############################################################
###############################################################################

test-backend:
  needs:
    - build-backend
  stage: test
  script:
    - docker build -t jobmon-backend_reporter --target reporter --pull backend
    - docker run --name jobmon-backend_reporter jobmon-backend_reporter
    - docker cp jobmon-backend_reporter:/app/report_backend.xml ./
  artifacts:
    # Artifact to safe the test results and visualize them in gitlab
    when: always
    reports:
      junit:
        - report_backend.xml

test-frontend:
  needs:
    - build-frontend
  stage: test
  before_script:
    - docker rm jobmon_frontend_test || true
  after_script:
    - docker rm jobmon_frontend_test
  script:
    - docker compose --file docker-compose.test.yml build --pull jobmon_frontend_tests
    - docker compose --file docker-compose.test.yml run --name jobmon_frontend_test jobmon_frontend_tests
    - docker cp jobmon_frontend_test:/app/report_frontend.xml ./
  artifacts:
    # Artifact to safe the test results and visualize them in gitlab
    when: always
    reports:
      junit:
        - report_frontend.xml
